name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Set up Python
      run: uv python install 3.11
    
    - name: Create virtual environment
      working-directory: ./backend
      run: uv venv .venv
    
    - name: Install dependencies
      working-directory: ./backend
      run: |
        uv pip install -e .
        uv pip install ruff mypy
    
    - name: Run ruff linting
      working-directory: ./backend
      run: uv run ruff check app/
    
    - name: Run ruff formatting check
      working-directory: ./backend
      run: uv run ruff format app/ --check
    
    - name: Run MyPy (allow failures)
      working-directory: ./backend
      run: uv run mypy app/ || true
    
    - name: Run tests
      working-directory: ./backend
      run: uv run pytest tests/ -v || echo "Tests not configured yet"

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./frontend/package.json
    
    - name: Install dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Run ESLint
      working-directory: ./frontend
      run: npm run lint
    
    - name: Run TypeScript check
      working-directory: ./frontend
      run: npx tsc --noEmit
    
    - name: Run tests
      working-directory: ./frontend
      run: npm test -- --passWithNoTests
    
    - name: Build application
      working-directory: ./frontend
      run: npm run build

  integration:
    name: Integration Tests
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        version: "latest"
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: ./frontend/package.json
    
    - name: Set up Python and install backend deps
      working-directory: ./backend
      run: |
        uv python install 3.11
        uv venv .venv
        uv pip install -e .
        uv pip install ruff mypy
    
    - name: Install frontend dependencies
      working-directory: ./frontend
      run: npm ci
    
    - name: Initialize database
      working-directory: ./backend
      run: uv run python init_db.py
    
    - name: Start backend server
      working-directory: ./backend
      run: |
        uv run uvicorn app.main:app --port 8000 &
        sleep 5
    
    - name: Test API endpoints
      run: |
        curl -f http://localhost:8000/ || exit 1
        curl -f http://localhost:8000/api/v1/journeys/ || exit 1
        echo "âœ… API endpoints responding"